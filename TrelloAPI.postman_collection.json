{
	"info": {
		"_postman_id": "f1166045-0c3f-4619-a548-cd4df5bfbaef",
		"name": "Trello REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"board_id\", response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name should be Board\", function(){",
							"    pm.expect(response.name).to.eql(\"Board Anida\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?key={{key}}&token={{token}}&name=Board Anida",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Board Anida"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"id_list\",response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"BoardID\", function(){",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"}); ",
							"",
							"pm.test(\"Name should be Klima\",function(){",
							"    pm.expect(response.name).to.eql(\"Klima\");",
							"});",
							"",
							"pm.test(\"Number of characters\", function(){",
							"    pm.expect(response.id.length).to.equal(pm.environment.get(\"id_list\").length);",
							"        console.log(\"Number of characters should be:\" + response.id.length);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{key}}&token={{token}}&name=Klima&idBoard={{board_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Klima"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create list 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"id_list_2\",response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name should be Klima nova\",function(){",
							"    pm.expect(response.name).to.eql(\"Klima nova\");",
							"});",
							"",
							"pm.test(\"Number of characters\", function(){",
							"    pm.expect(response.id.length).to.equal(pm.environment.get(\"id_list_2\").length);",
							"        console.log(\"Number of characters should be:\" + response.id.length);",
							"});",
							"",
							"pm.test(\"BoardID\", function(){",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{key}}&token={{token}}&name=Klima nova&idBoard={{board_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Klima nova"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create  list 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"id_list_3\",response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name should be Klima nova\",function(){",
							"    pm.expect(response.name).to.eql(\"Skola\");",
							"});",
							"",
							"pm.test(\"BoardID\", function(){",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{key}}&token={{token}}&name=Skola&idBoard={{board_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Skola"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.environment.set(\"card_id\",response.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Name should be Maxon\", function(){",
							"    pm.expect(response.name).to.eql(\"Maxon\");",
							"});",
							"",
							"pm.test(\"BoardID\", function(){",
							"    pm.expect(response.idBoard).to.eql(pm.environment.get(\"board_id\"));",
							"});",
							"",
							"pm.test(\"ListID\", function(){",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"id_list\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?key={{key}}&token={{token}}&idList={{id_list}}&name=Maxon",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idList",
							"value": "{{id_list}}"
						},
						{
							"key": "name",
							"value": "Maxon"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a member to a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"for(let i = 0; i < response.length; i++) {",
							"    pm.test(\"Users\", function(){",
							"    pm.expect(response[i].username).to.be.oneOf([\"vildanasutkovic\", \"anidamusinovic\"]);",
							"});",
							"console.log(\"Username should be: \" + response[i].username);",
							"}",
							"",
							"for(let i = 0; i < response.length; i++) {",
							"    pm.test(\"ID\", function(){",
							"        pm.expect(response[i].id).to.be.eql(pm.environment.get(\"id_Vildana\") || pm.environment.get(\"id_Anida\"));",
							"    }); ",
							"",
							"console.log(\"ID should be: \" + response[i].id);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}/idMembers?key={{key}}&token={{token}}&id={{card_id}}&value={{id_Vildana}}&value2={{id_Anida}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}",
						"idMembers"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						},
						{
							"key": "value",
							"value": "{{id_Vildana}}"
						},
						{
							"key": "value2",
							"value": "{{id_Anida}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a member to a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"BoardID\", function(){",
							"    pm.expect(response.id).to.eql(pm.environment.get(\"board_id\"));",
							"});",
							"",
							"for(let i = 0; i < response.members.length; i++) {",
							"    pm.test(\"Users\", function(){",
							"    pm.expect(response.members[i].username).to.be.oneOf([\"vildanasutkovic\", \"anidamusinovic\"]);",
							"});",
							"console.log(\"Username should be: \" + response.members[i].username);",
							"}",
							"",
							"for(let i = 0; i < response.members.length; i++) {",
							"    pm.test(\"ID\", function(){",
							"    pm.expect(response.members[i].id).to.be.oneOf([\"60b7360a1dae8a707a9c5007\", \"60a7bada63cda20d1b22818e\"]);",
							"});",
							"console.log(\"Id should be: \" + response.members[i].id);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{board_id}}/members/{{id_Vildana}}?key={{key}}&token={{token}}&type=normal&idMember={{id_Vildana}}&id={{board_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}",
						"members",
						"{{id_Vildana}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "type",
							"value": "normal"
						},
						{
							"key": "idMember",
							"value": "{{id_Vildana}}"
						},
						{
							"key": "id",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to another list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"CardID\",function(){",
							"    pm.expect(response.id).to.eql(pm.environment.get(\"card_id\"));",
							"});",
							"",
							"pm.test(\"NewListID\",function(){",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"id_list_2\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}?key={{key}}&token={{token}}&id={{card_id}}&idList={{id_list_2}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						},
						{
							"key": "idList",
							"value": "{{id_list_2}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to another list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"CardID\",function(){",
							"    pm.expect(response.id).to.eql(pm.environment.get(\"card_id\"));",
							"});",
							"",
							"pm.test(\"NewListId\",function(){",
							"    pm.expect(response.idList).to.eql(pm.environment.get(\"id_list_3\"));",
							"});",
							"",
							"pm.test(\"ID\", function(){",
							"    pm.expect(response.idMembers[0]).to.eql(pm.environment.get(\"id_Vildana\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}?key={{key}}&token={{token}}&id={{card_id}}&idList={{id_list_3}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						},
						{
							"key": "idList",
							"value": "{{id_list_3}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive a list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be archived\", function(){",
							"    pm.expect(response.id).to.eql(pm.environment.get(\"id_list_2\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{id_list_2}}/closed?key={{key}}&token={{token}}&id={{id_list_2}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{id_list_2}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{id_list_2}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Card should be deleted\",function(){",
							"    pm.expect(response.limits).to.be.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{card_id}}?key={{key}}&token={{token}}&id={{card_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{card_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Board should be deleted\",function(){",
							"    pm.expect(response._value).to.be.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{board_id}}?key={{key}}&token={{token}}&id={{board_id}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "id",
							"value": "{{board_id}}"
						}
					]
				}
			},
			"response": []
		}
	]
}